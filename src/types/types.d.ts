/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    DateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    DateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  BlogByIdInput: { // input type
    id: string; // String!
  }
  BlogCommentByIdInput: { // input type
    id: string; // String!
  }
  BlogCommentsByParentCommentIdInput: { // input type
    id: string; // String!
  }
  BlogCommentsByPostIdInput: { // input type
    id: string; // String!
  }
  BlogCommentsByUserIdInput: { // input type
    id: string; // String!
  }
  BlogPostByIdInput: { // input type
    id: string; // String!
  }
  BlogPostsByBlogIdInput: { // input type
    id: string; // String!
  }
  BlogPostsByUserIdInput: { // input type
    id: string; // String!
  }
  BlogsByUserIdInput: { // input type
    id: string; // String!
  }
  PostOrderById: { // input type
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  ProfileByIdInput: { // input type
    id: string; // String!
  }
  UserByIdInput: { // input type
    id: string; // String!
  }
}

export interface NexusGenEnums {
  SortOrder: "asc" | "desc"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Blog: { // root type
    authorId: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description?: string | null; // String
    id: string; // String!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  BlogComment: { // root type
    authorId: string; // String!
    blogPostId: string; // String!
    content?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    parentId?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  BlogPost: { // root type
    authorId: string; // String!
    blogId: string; // String!
    content?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    published: boolean; // Boolean!
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Profile: { // root type
    bio: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: string; // String!
  }
  Query: {};
  User: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    id: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    username: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Blog: { // field return type
    author: NexusGenRootTypes['User'] | null; // User
    authorId: string; // String!
    blogPosts: Array<NexusGenRootTypes['BlogPost'] | null>; // [BlogPost]!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description: string | null; // String
    id: string; // String!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  BlogComment: { // field return type
    author: NexusGenRootTypes['User'] | null; // User
    authorId: string; // String!
    blogComments: Array<NexusGenRootTypes['BlogComment'] | null>; // [BlogComment]!
    blogPost: NexusGenRootTypes['BlogPost'] | null; // BlogPost
    blogPostId: string; // String!
    content: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    parent: NexusGenRootTypes['BlogComment'] | null; // BlogComment
    parentId: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  BlogPost: { // field return type
    author: NexusGenRootTypes['User'] | null; // User
    authorId: string; // String!
    blog: NexusGenRootTypes['Blog'] | null; // Blog
    blogComments: Array<NexusGenRootTypes['BlogComment'] | null>; // [BlogComment]!
    blogId: string; // String!
    content: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    published: boolean; // Boolean!
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Profile: { // field return type
    bio: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string; // String!
  }
  Query: { // field return type
    allBlogComments: Array<NexusGenRootTypes['BlogComment'] | null> | null; // [BlogComment]
    allBlogPosts: Array<NexusGenRootTypes['BlogPost'] | null> | null; // [BlogPost]
    allBlogs: Array<NexusGenRootTypes['Blog'] | null> | null; // [Blog]
    allProfiles: Array<NexusGenRootTypes['Profile'] | null> | null; // [Profile]
    allUsers: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    blogById: NexusGenRootTypes['Blog'] | null; // Blog
    blogCommentById: NexusGenRootTypes['BlogComment'] | null; // BlogComment
    blogCommentsByParentCommentId: Array<NexusGenRootTypes['BlogComment'] | null> | null; // [BlogComment]
    blogCommentsByPostId: Array<NexusGenRootTypes['BlogComment'] | null> | null; // [BlogComment]
    blogCommentsByUserId: Array<NexusGenRootTypes['BlogComment'] | null> | null; // [BlogComment]
    blogPostById: NexusGenRootTypes['BlogPost'] | null; // BlogPost
    blogPostsByBlogId: Array<NexusGenRootTypes['BlogPost'] | null> | null; // [BlogPost]
    blogPostsByUserId: Array<NexusGenRootTypes['BlogPost'] | null> | null; // [BlogPost]
    blogsByUserId: Array<NexusGenRootTypes['Blog'] | null> | null; // [Blog]
    profileById: NexusGenRootTypes['Profile'] | null; // Profile
    userById: NexusGenRootTypes['User'] | null; // User
  }
  User: { // field return type
    blogComments: Array<NexusGenRootTypes['BlogComment'] | null>; // [BlogComment]!
    blogPosts: Array<NexusGenRootTypes['BlogPost'] | null>; // [BlogPost]!
    blogs: Array<NexusGenRootTypes['Blog'] | null> | null; // [Blog]
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    id: string; // String!
    profile: NexusGenRootTypes['Profile'] | null; // Profile
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    username: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Blog: { // field return type name
    author: 'User'
    authorId: 'String'
    blogPosts: 'BlogPost'
    createdAt: 'DateTime'
    description: 'String'
    id: 'String'
    name: 'String'
    updatedAt: 'DateTime'
  }
  BlogComment: { // field return type name
    author: 'User'
    authorId: 'String'
    blogComments: 'BlogComment'
    blogPost: 'BlogPost'
    blogPostId: 'String'
    content: 'String'
    createdAt: 'DateTime'
    id: 'String'
    parent: 'BlogComment'
    parentId: 'String'
    updatedAt: 'DateTime'
  }
  BlogPost: { // field return type name
    author: 'User'
    authorId: 'String'
    blog: 'Blog'
    blogComments: 'BlogComment'
    blogId: 'String'
    content: 'String'
    createdAt: 'DateTime'
    id: 'String'
    published: 'Boolean'
    title: 'String'
    updatedAt: 'DateTime'
  }
  Profile: { // field return type name
    bio: 'String'
    createdAt: 'DateTime'
    id: 'String'
    updatedAt: 'DateTime'
    user: 'User'
    userId: 'String'
  }
  Query: { // field return type name
    allBlogComments: 'BlogComment'
    allBlogPosts: 'BlogPost'
    allBlogs: 'Blog'
    allProfiles: 'Profile'
    allUsers: 'User'
    blogById: 'Blog'
    blogCommentById: 'BlogComment'
    blogCommentsByParentCommentId: 'BlogComment'
    blogCommentsByPostId: 'BlogComment'
    blogCommentsByUserId: 'BlogComment'
    blogPostById: 'BlogPost'
    blogPostsByBlogId: 'BlogPost'
    blogPostsByUserId: 'BlogPost'
    blogsByUserId: 'Blog'
    profileById: 'Profile'
    userById: 'User'
  }
  User: { // field return type name
    blogComments: 'BlogComment'
    blogPosts: 'BlogPost'
    blogs: 'Blog'
    createdAt: 'DateTime'
    email: 'String'
    id: 'String'
    profile: 'Profile'
    updatedAt: 'DateTime'
    username: 'String'
  }
}

export interface NexusGenArgTypes {
  Query: {
    blogById: { // args
      data: NexusGenInputs['BlogByIdInput']; // BlogByIdInput!
    }
    blogCommentById: { // args
      data: NexusGenInputs['BlogCommentByIdInput']; // BlogCommentByIdInput!
    }
    blogCommentsByParentCommentId: { // args
      data: NexusGenInputs['BlogCommentsByParentCommentIdInput']; // BlogCommentsByParentCommentIdInput!
    }
    blogCommentsByPostId: { // args
      data: NexusGenInputs['BlogCommentsByPostIdInput']; // BlogCommentsByPostIdInput!
    }
    blogCommentsByUserId: { // args
      data: NexusGenInputs['BlogCommentsByUserIdInput']; // BlogCommentsByUserIdInput!
    }
    blogPostById: { // args
      data: NexusGenInputs['BlogPostByIdInput']; // BlogPostByIdInput!
    }
    blogPostsByBlogId: { // args
      data: NexusGenInputs['BlogPostsByBlogIdInput']; // BlogPostsByBlogIdInput!
    }
    blogPostsByUserId: { // args
      data: NexusGenInputs['BlogPostsByUserIdInput']; // BlogPostsByUserIdInput!
    }
    blogsByUserId: { // args
      data: NexusGenInputs['BlogsByUserIdInput']; // BlogsByUserIdInput!
    }
    profileById: { // args
      data: NexusGenInputs['ProfileByIdInput']; // ProfileByIdInput!
    }
    userById: { // args
      userByIdInput: NexusGenInputs['UserByIdInput']; // UserByIdInput!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}